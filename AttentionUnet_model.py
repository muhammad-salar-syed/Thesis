

from keras.models import Model
from keras.layers import Input, Conv2D, MaxPooling2D,Activation, UpSampling2D, concatenate, Conv2DTranspose, BatchNormalization,Dropout, Lambda,add,multiply
from tensorflow.keras.optimizers import Adam
from tensorflow.keras import backend as k

def Attension_Unet(input_size):
    inputs=Input(input_size,name='Input')
    
    B1_conv1=Conv2D(64,3,padding='same',kernel_initializer='he_normal',name='B1_Conv1')(inputs)
    B1_conv1=BatchNormalization(name='B1_Conv1_BatchNormalization')(B1_conv1)
    B1_conv1=Activation('relu',name='B1_Conv1_Activation')(B1_conv1)
    
    B1_conv2=Conv2D(64,3,padding='same',kernel_initializer='he_normal',name='B1_Conv2')(B1_conv1)
    B1_conv2=BatchNormalization(name='B1_Conv2_BatchNormalization')(B1_conv2)
    B1_conv2=Activation('relu',name='B1_Conv2_Activation')(B1_conv2)
    
    B1_pool=MaxPooling2D(pool_size=(2,2),name='B1_Pooling')(B1_conv2)
    
    B2_conv1=Conv2D(128,3,padding='same',kernel_initializer='he_normal',name='B2_Conv1')(B1_pool)
    B2_conv1=BatchNormalization(name='B2_Conv1_BatchNormalization')(B2_conv1)
    B2_conv1=Activation('relu',name='B2_Conv1_Activation')(B2_conv1)
    
    B2_conv2=Conv2D(128,3,padding='same',kernel_initializer='he_normal',name='B2_Conv2')(B2_conv1)
    B2_conv2=BatchNormalization(name='B2_Conv2_BatchNormalization')(B2_conv2)
    B2_conv2=Activation('relu',name='B2_Conv2_Activation')(B2_conv2)
    
    B2_pool=MaxPooling2D(pool_size=(2,2),name='B2_Pooling')(B2_conv2)
    
    B3_conv1=Conv2D(256,3,padding='same',kernel_initializer='he_normal',name='B3_Conv1')(B2_pool)
    B3_conv1=BatchNormalization(name='B3_Conv1_BatchNormalization')(B3_conv1)
    B3_conv1=Activation('relu',name='B3_Conv1_Activation')(B3_conv1)
    
    B3_conv2=Conv2D(256,3,padding='same',kernel_initializer='he_normal',name='B3_Conv2')(B3_conv1)
    B3_conv2=BatchNormalization(name='B3_Conv2_BatchNormalization')(B3_conv2)
    B3_conv2=Activation('relu',name='B3_Conv2_Activation')(B3_conv2)
    
    B3_pool=MaxPooling2D(pool_size=(2,2),name='B3_Pooling')(B3_conv2)
    
    B4_conv1=Conv2D(512,3,padding='same',kernel_initializer='he_normal',name='B4_Conv1')(B3_pool)
    B4_conv1=BatchNormalization(name='B4_Conv1_BatchNormalization')(B4_conv1)
    B4_conv1=Activation('relu',name='B4_Conv1_Activation')(B4_conv1)
    
    B4_conv2=Conv2D(512,3,padding='same',kernel_initializer='he_normal',name='B4_Conv2')(B4_conv1)
    B4_conv2=BatchNormalization(name='B4_Conv2_BatchNormalization')(B4_conv2)
    B4_conv2=Activation('relu',name='B4_Conv2_Activation')(B4_conv2)
    
    B4_pool=MaxPooling2D(pool_size=(2,2),name='B4_Pooling')(B4_conv2)
    
    BN_conv1=Conv2D(1024,3,padding='same',kernel_initializer='he_normal',name='BN_Conv1')(B4_pool)
    BN_conv1=BatchNormalization(name='BN_Conv1_BatchNormalization')(BN_conv1)
    BN_conv1=Activation('relu',name='BN_Conv1_Activation')(BN_conv1)
    
    BN_conv2=Conv2D(1024,3,padding='same',kernel_initializer='he_normal',name='BN_Conv2')(BN_conv1)
    BN_conv2=BatchNormalization(name='BN_Conv2_BatchNormalization')(BN_conv2)
    BN_conv2=Activation('relu',name='BN_Conv2_Activation')(BN_conv2)
    
    gating_B4=Conv2D(512,1,padding='same',name='Gating_B4')(BN_conv2)
    gating_B4=BatchNormalization(name='Gating_B4_BatchNormalization')(gating_B4)
    gating_B4=Activation('relu',name='Gating_B4_Activation')(gating_B4)
    Attension_B4=Conv2D(512,2,strides=(2,2),padding='same')(B4_conv2)
    phi_g_B4=Conv2D(512,1,padding='same',name='Phi_g_B4')(gating_B4)
    upsample_g_B4=Conv2DTranspose(512,(3,3),strides=(1,1),padding='same',name='Upsample_g_B4')(phi_g_B4)
    concat_xg_B4=add([upsample_g_B4,Attension_B4],name='add_xg_B4')
    activation_relu_xg_B4=Activation('relu',name='relu_xg_B4')(concat_xg_B4)
    psi_B4=Conv2D(1,1,padding='same',name='Psi_B4')(activation_relu_xg_B4)
    activation_sigmoid_xg_B4=Activation('sigmoid',name='sigmoid_xg_B4')(psi_B4)
    shape_sigmoid_xg_B4=k.int_shape(activation_sigmoid_xg_B4)
    upsample_psi_B4=UpSampling2D(size=(2,2),name='Upsample_psi_B4')(activation_sigmoid_xg_B4)
    upsample_psi_B4=Lambda(lambda x,repum:k.repeat_elements(x,repum,axis=3),arguments={'repum':512},name='Lambda_B4')(upsample_psi_B4)
    y_B4=multiply([upsample_psi_B4,B4_conv2],name='Multiply_B4')
    output_B4=Conv2D(512,1,padding='same',name='Output_B4')(y_B4)
    output_BN_B4=BatchNormalization(name='Output_B4_BatchNormalization')(output_B4)
    UP_B4=UpSampling2D(size=(2,2),data_format='channels_last',name='UP_B4')(BN_conv2)
    merge_B4=concatenate([UP_B4,output_BN_B4],axis=3,name='Concatenate_B4')
    conv1_B4=Conv2D(512,3,padding='same',kernel_initializer='he_normal',name='UP_Conv1_B4')(merge_B4)
    conv1_B4=BatchNormalization(name='UP_Conv1_B4_BatchNormalization')(conv1_B4)
    conv1_B4=Activation('relu',name='UP_Conv1_B4_Activation')(conv1_B4)
    conv2_B4=Conv2D(512,3,padding='same',kernel_initializer='he_normal',name='UP_Conv2_B4')(conv1_B4)
    conv2_B4=BatchNormalization(name='UP_Conv2_B4_BatchNormalization')(conv2_B4)
    conv2_B4=Activation('relu',name='UP_Conv2_B4_Activation')(conv2_B4)
    
    gating_B3=Conv2D(256,1,padding='same',name='Gating_B3')(conv2_B4)
    gating_B3=BatchNormalization(name='Gating_B3_BatchNormalization')(gating_B3)
    gating_B3=Activation('relu',name='Gating_B3_Activation')(gating_B3)
    Attension_B3=Conv2D(256,2,strides=(2,2),padding='same')(B3_conv2)
    phi_g_B3=Conv2D(256,1,padding='same',name='Phi_g_B3')(gating_B3)
    upsample_g_B3=Conv2DTranspose(256,(3,3),strides=(1,1),padding='same',name='Upsample_g_B3')(phi_g_B3)
    concat_xg_B3=add([upsample_g_B3,Attension_B3],name='add_xg_B3')
    activation_relu_xg_B3=Activation('relu',name='relu_xg_B3')(concat_xg_B3)
    psi_B3=Conv2D(1,1,padding='same',name='Psi_B3')(activation_relu_xg_B3)
    activation_sigmoid_xg_B3=Activation('sigmoid',name='sigmoid_xg_B3')(psi_B3)
    shape_sigmoid_xg_B3=k.int_shape(activation_sigmoid_xg_B3)
    upsample_psi_B3=UpSampling2D(size=(2,2),name='Upsample_psi_B3')(activation_sigmoid_xg_B3)
    upsample_psi_B3=Lambda(lambda x,repum:k.repeat_elements(x,repum,axis=3),arguments={'repum':256},name='Lambda_B3')(upsample_psi_B3)
    y_B3=multiply([upsample_psi_B3,B3_conv2],name='Multiply_B3')
    output_B3=Conv2D(256,1,padding='same',name='Output_B3')(y_B3)
    output_BN_B3=BatchNormalization(name='Output_B3_BatchNormalization')(output_B3)
    UP_B3=UpSampling2D(size=(2,2),data_format='channels_last',name='UP_B3')(conv2_B4)
    merge_B3=concatenate([UP_B3,output_BN_B3],axis=3,name='Concatenate_B3')
    conv1_B3=Conv2D(256,3,padding='same',kernel_initializer='he_normal',name='UP_Conv1_B3')(merge_B3)
    conv1_B3=BatchNormalization(name='UP_Conv1_B3_BatchNormalization')(conv1_B3)
    conv1_B3=Activation('relu',name='UP_Conv1_B3_Activation')(conv1_B3)
    conv2_B3=Conv2D(256,3,padding='same',kernel_initializer='he_normal',name='UP_Conv2_B3')(conv1_B3)
    conv2_B3=BatchNormalization(name='UP_Conv2_B3_BatchNormalization')(conv2_B3)
    conv2_B3=Activation('relu',name='UP_Conv2_B3_Activation')(conv2_B3)
    
    gating_B2=Conv2D(128,1,padding='same',name='Gating_B2')(conv2_B3)
    gating_B2=BatchNormalization(name='Gating_B2_BatchNormalization')(gating_B2)
    gating_B2=Activation('relu',name='Gating_B2_Activation')(gating_B2)
    Attension_B2=Conv2D(128,2,strides=(2,2),padding='same')(B2_conv2)
    phi_g_B2=Conv2D(128,1,padding='same',name='Phi_g_B2')(gating_B2)
    upsample_g_B2=Conv2DTranspose(128,(3,3),strides=(1,1),padding='same',name='Upsample_g_B2')(phi_g_B2)
    concat_xg_B2=add([upsample_g_B2,Attension_B2],name='add_xg_B2')
    activation_relu_xg_B2=Activation('relu',name='relu_xg_B2')(concat_xg_B2)
    psi_B2=Conv2D(1,1,padding='same',name='Psi_B2')(activation_relu_xg_B2)
    activation_sigmoid_xg_B2=Activation('sigmoid',name='sigmoid_xg_B2')(psi_B2)
    shape_sigmoid_xg_B2=k.int_shape(activation_sigmoid_xg_B2)
    upsample_psi_B2=UpSampling2D(size=(2,2),name='Upsample_psi_B2')(activation_sigmoid_xg_B2)
    upsample_psi_B2=Lambda(lambda x,repum:k.repeat_elements(x,repum,axis=3),arguments={'repum':128},name='Lambda_B2')(upsample_psi_B2)
    y_B2=multiply([upsample_psi_B2,B2_conv2],name='Multiply_B2')
    output_B2=Conv2D(128,1,padding='same',name='Output_B2')(y_B2)
    output_BN_B2=BatchNormalization(name='Output_B2_BatchNormalization')(output_B2)
    UP_B2=UpSampling2D(size=(2,2),data_format='channels_last',name='UP_B2')(conv2_B3)
    merge_B2=concatenate([UP_B2,output_BN_B2],axis=3,name='Concatenate_B2')
    conv1_B2=Conv2D(128,3,padding='same',kernel_initializer='he_normal',name='UP_Conv1_B2')(merge_B2)
    conv1_B2=BatchNormalization(name='UP_Conv1_B2_BatchNormalization')(conv1_B2)
    conv1_B2=Activation('relu',name='UP_Conv1_B2_Activation')(conv1_B2)
    conv2_B2=Conv2D(128,3,padding='same',kernel_initializer='he_normal',name='UP_Conv2_B2')(conv1_B2)
    conv2_B2=BatchNormalization(name='UP_Conv2_B2_BatchNormalization')(conv2_B2)
    conv2_B2=Activation('relu',name='UP_Conv2_B2_Activation')(conv2_B2)
    
    gating_B1=Conv2D(64,1,padding='same',name='Gating_B1')(conv2_B2)
    gating_B1=BatchNormalization(name='Gating_B1_BatchNormalization')(gating_B1)
    gating_B1=Activation('relu',name='Gating_B1_Activation')(gating_B1)
    Attension_B1=Conv2D(64,2,strides=(2,2),padding='same')(B1_conv2)
    phi_g_B1=Conv2D(64,1,padding='same',name='Phi_g_B1')(gating_B1)
    upsample_g_B1=Conv2DTranspose(64,(3,3),strides=(1,1),padding='same',name='Upsample_g_B1')(phi_g_B1)
    concat_xg_B1=add([upsample_g_B1,Attension_B1],name='add_xg_B1')
    activation_relu_xg_B1=Activation('relu',name='relu_xg_B1')(concat_xg_B1)
    psi_B1=Conv2D(1,1,padding='same',name='Psi_B1')(activation_relu_xg_B1)
    activation_sigmoid_xg_B1=Activation('sigmoid',name='sigmoid_xg_B1')(psi_B1)
    shape_sigmoid_xg_B1=k.int_shape(activation_sigmoid_xg_B1)
    upsample_psi_B1=UpSampling2D(size=(2,2),name='Upsample_psi_B1')(activation_sigmoid_xg_B1)
    upsample_psi_B1=Lambda(lambda x,repum:k.repeat_elements(x,repum,axis=3),arguments={'repum':64},name='Lambda_B1')(upsample_psi_B1)
    y_B1=multiply([upsample_psi_B1,B1_conv2],name='Multiply_B1')
    output_B1=Conv2D(64,1,padding='same',name='Output_B1')(y_B1)
    output_BN_B1=BatchNormalization(name='Output_B1_BatchNormalization')(output_B1)
    UP_B1=UpSampling2D(size=(2,2),data_format='channels_last',name='UP_B1')(conv2_B2)
    merge_B1=concatenate([UP_B1,output_BN_B1],axis=3,name='Concatenate_B1')
    conv1_B1=Conv2D(64,3,padding='same',kernel_initializer='he_normal',name='UP_Conv1_B1')(merge_B1)
    conv1_B1=BatchNormalization(name='UP_Conv1_B1_BatchNormalization')(conv1_B1)
    conv1_B1=Activation('relu',name='UP_Conv1_B1_Activation')(conv1_B1)
    conv2_B1=Conv2D(64,3,padding='same',kernel_initializer='he_normal',name='UP_Conv2_B1')(conv1_B1)
    conv2_B1=BatchNormalization(name='UP_Conv2_B1_BatchNormalization')(conv2_B1)
    conv2_B1=Activation('relu',name='UP_Conv2_B1_Activation')(conv2_B1)
    
    outputs=Conv2D(1,(1,1),padding='same',name='Output')(conv2_B1)
    outputs=BatchNormalization(name='Output_BatchNormalization')(outputs)
    outputs=Activation('sigmoid',name='Output_Activation')(outputs)
    
    model=Model(inputs,outputs,name='Attension_Unet')
    return model

